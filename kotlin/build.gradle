buildscript {
    ext.kotlin_version = '1.0.0-beta-2422'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'


android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        applicationId "com.github.daneko.android.kotlin"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode 1
        versionName "1.0"
        buildConfigField "String", "OPEN_WEATHER_MAP_APIKEY", "\"$env.openWeatherMapApiKey\""
    }

    buildTypes {
        release {
            debuggable true
            signingConfig signingConfigs.debug
            minifyEnabled true
            proguardFiles(
                    getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro',
                    "$rootDir/proguard-common-rules.pro")
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        def plainDir = project(':plain').projectDir
        main.res.srcDirs += "$plainDir/src/main/res"
        test.java.srcDirs += 'src/test/kotlin'
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "com.android.support:appcompat-v7:$versions.supportLib"
    compile "com.android.support:design:$versions.supportLib"
    compile "com.squareup.retrofit:retrofit:${versions.retrofit}"
    compile("com.squareup.retrofit:adapter-rxjava:${versions.retrofit}") {
        exclude group: 'io.reactivex', module: 'rxjava'
    }
    compile "com.squareup.retrofit:converter-moshi:${versions.retrofit}"

    compile "io.reactivex:rxandroid:${versions.rxandroid}"
    compile "io.reactivex:rxjava:${versions.rx}"

    compile "com.infstory:proguard-annotations:1.0.2"

    testCompile "junit:junit:${versions.junit}"
    testCompile "com.squareup.okhttp:mockwebserver:${versions.okhttpMockserver}"
    testCompile "org.assertj:assertj-core:${versions.assertjCore}"
}

repositories {
    mavenCentral()
}
